defaults: &defaults
  working_directory: /webrtc-streamer

version: 2
jobs:
  # -------------------------------------
  # dowload common tools 
  # -------------------------------------
  setup:
    <<: *defaults
    
    environment:
      WEBRTCROOT: /webrtc 

    steps:     
      - run: apt-get update; apt-get install -y --no-install-recommends autoconf automake libtool git make g++ xz-utils
      - run: git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git /depot_tools
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: mkdir ${WEBRTCROOT} && cd ${WEBRTCROOT} && fetch --no-history --nohooks webrtc 
      - run: cd ${WEBRTCROOT} && sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS 

      - persist_to_workspace:
          root: /
          paths:
            - depot_tools 
            - webrtc
            
  # -------------------------------------
  # build x86_64
  # -------------------------------------
  build_x86_64:
    <<: *defaults
    
    environment:
      TAR_OPTIONS: --no-same-owner
      WEBRTCROOT: /webrtc 

    steps:
      - attach_workspace:
          at: /          
      - checkout
      - run: apt-get update; apt-get install -y --no-install-recommends autoconf automake libtool git cmake make g++ xz-utils libgtk-3-dev libasound2-dev
      - run: echo 'export PATH=/depot_tools:$PATH' >> $BASH_ENV
      - run: cd ${WEBRTCROOT} && gclient sync 
      
      - run: cmake . && make && cpack 

      - run: mkdir /distrib && cp webrtc-streamer*.tar.gz /distrib
      - persist_to_workspace:
          root: /
          paths:
            - distrib                

  # -------------------------------------
  # store artifact in circleci
  # -------------------------------------
  store_artifact:
    <<: *defaults
    
    steps:
      - attach_workspace:
          at: /
      - store_artifacts:
          path: /distrib
          
  # -------------------------------------
  # publish artifact on github
  # -------------------------------------
  github_release:
    <<: *defaults
    
    steps:
      - attach_workspace:
          at: /
      - run: curl https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz | tar -C /usr/local -xzf -
      - run: echo 'export PATH=/usr/local/go/bin:/root/go/bin:$PATH' >> $BASH_ENV      
      - run: go get github.com/tcnksm/ghr
      - deploy:
          name: "Deploy to Github"
          command: ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME $CIRCLE_TAG /distrib

   
workflows:
  version: 2
  build:
    jobs:
      - setup:
          filters:
            tags:
              only: /.*/            
      - build_x86_64:
          requires:
            - setup
          filters:
            tags:
              only: /.*/                             
      - store_artifact:
          requires:
            - build_x86_64         
          filters:
            tags:
              only: /.*/                   
      - github_release:
          requires:
            - store_artifact
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/  